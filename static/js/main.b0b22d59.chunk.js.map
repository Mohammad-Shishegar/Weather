{"version":3,"sources":["Components/HourlyCurrentDay/ShowHourlyTemp/ShowHourlyTemp.jsx","Components/HourlyCurrentDay/HourlyTemp/HourlyTemp.jsx","services/api/Server.jsx","Components/DaysWeather/ShowDaysWeather/ShowDaysWeather.jsx","Components/DaysWeather/DaysWeatherForecast/DaysWeatherForecast.jsx","Components/Weather/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowHourlyTemp","props","temperature","temp","handleWeatherIcon","className","main","Math","floor","weather","icon","humidity","dt_txt","slice","HourlyTemp","currentTime","daysWeather","useState","temperatures","setTemperatures","useEffect","prepareTemperature","array","date","data","i","list","push","startAnimation","error","document","getElementById","id","map","item","getCurrentWeather","city","a","axios","get","URL","response","getDaysWeather","getCurrentTime","ShowDaysWeather","kelvinToCelsius","dayName","max_temp","min_temp","DaysWeatherForecast","daysWeatherData","setDaysWeatherData","hourly","prepareDays","parseInt","j","prepareTemp","pop","min","temp_min","max","length","temp_max","Date","getDay","Weather","state","cityName","minTemp","maxTemp","time","description","data_CityName","currentWeather","getData","setState","matchState","changeBackground","time_24","name","code","string","style","display","placeholder","onChange","text","target","value","this","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b0b22d59.chunk.js","sourcesContent":["import { WiHumidity } from \"react-icons/wi\"\r\nimport \"./ShowHourlyTempStyle.scss\"\r\n\r\nconst ShowHourlyTemp = (props) => {\r\n    const { temp, handleWeatherIcon } = props\r\n    const kelvinToCelsius = (temperature) => {\r\n        return Math.floor(temperature - 273.15)\r\n    }\r\n    return (\r\n        <div className=\"show-temp\">\r\n            <p>{kelvinToCelsius(temp.main.temp)}&deg;</p>\r\n            {handleWeatherIcon(temp.weather[0].icon, \"hourly-temp-icon\")}\r\n            <div className=\"humidity\">\r\n                <p className=\"humidity\">{temp.main.humidity}</p>\r\n                <WiHumidity className=\"humidity-icon\" />\r\n            </div>\r\n            <p>{temp.dt_txt.slice(11, 19)}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowHourlyTemp","import React, { useState, useEffect } from \"react\"\r\nimport ShowHourlyTemp from \"../ShowHourlyTemp/ShowHourlyTemp\"\r\nimport \"./HourlyTempStyle.scss\"\r\n\r\nconst HourlyTemp = (props) => {\r\n\r\n    const { currentTime, daysWeather, handleWeatherIcon } = props\r\n    const [temperatures, setTemperatures] = useState([])\r\n    \r\n    useEffect(() => {\r\n        prepareTemperature()\r\n    }, [daysWeather])\r\n    \r\n    const prepareTemperature = () => {\r\n        setTemperatures([])\r\n        var array = []\r\n        try {\r\n            var date = currentTime.data.date\r\n            for (var i=0; i < 5; i++) {\r\n                if (date == daysWeather.data.list[i].dt_txt.slice(0, 10)) {\r\n                    array.push(daysWeather.data.list[i])\r\n                }\r\n            }\r\n            startAnimation()\r\n        }\r\n        catch (error) {\r\n        }\r\n        setTemperatures(array)\r\n    }\r\n\r\n    const startAnimation = () => {\r\n        document.getElementById(\"hourly-temp\").className = \"hourly-temp hourly-animation-right\"\r\n    }\r\n    \r\n    return (\r\n        <div className=\"hourly-temp\" id=\"hourly-temp\">\r\n            {temperatures.map(item => <ShowHourlyTemp temp = {item} handleWeatherIcon= {handleWeatherIcon}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourlyTemp","import axios from \"axios\"\r\n\r\nURL = \"http://api.openweathermap.org/data/2.5\"\r\n\r\nexport async function getCurrentWeather(city) {\r\n    try {\r\n        const response = await axios.get(`${URL}/weather?q=${city}&appid=ce620025d33734fd3417ec6e04fbc691`)\r\n        return response\r\n    }\r\n    catch (error) {\r\n        return \"Not Found\"\r\n    }\r\n}\r\n\r\nexport async function getDaysWeather(city) {\r\n    try {\r\n        const response = await axios.get(`${URL}/forecast?q=${city}&mode=json&appid=ce620025d33734fd3417ec6e04fbc691`)\r\n        return response\r\n    }\r\n    catch (error) {\r\n        return \"Not Found\"\r\n    }\r\n}\r\n\r\nexport async function getCurrentTime(city) {\r\n    try {\r\n        const response = await axios.get(`https://api.ipgeolocation.io/timezone?apiKey=7e6e10aaf571468c96dc467e87736cfa&location=${city}`)\r\n        return response\r\n    }\r\n    catch (error) {\r\n        return \"Not Found\"\r\n    }\r\n}","import React, { } from \"react\"\r\nimport { WiHumidity, WiDirectionUp, WiDirectionDown } from \"react-icons/wi\"\r\nimport {FaLongArrowAltUp , FaLongArrowAltDown} from \"react-icons/fa\"\r\nimport \"./ShowDaysWeatherStyle.scss\"\r\n\r\nconst ShowDaysWeather = (props) => {\r\n\r\n    const { handleWeatherIcon, temp } = props\r\n\r\n    const kelvinToCelsius = (temperature) => {\r\n        return Math.floor(temperature - 273.15)\r\n    }\r\n\r\n    return (\r\n        <div className=\"show-days-weather\">\r\n            <p>{temp.dayName}</p>\r\n            {handleWeatherIcon(temp.icon, \"days-icon\")}\r\n            <div className=\"day-humidity\">\r\n                <p className=\"day-humidity\">{temp.humidity}</p>\r\n                <WiHumidity className=\"humidity-icon\" />\r\n            </div>\r\n            <div className=\"days-min-max-temp\">\r\n                <div className=\"days-max-temp\">\r\n                    <FaLongArrowAltUp className=\"icon\"/>\r\n                    <p>{kelvinToCelsius(temp.max_temp)}&deg;</p>\r\n                </div>\r\n                <div className=\"days-min-temp\">\r\n                    <FaLongArrowAltDown className=\"icon\"/>\r\n                    <p>{kelvinToCelsius(temp.min_temp)}&deg;</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDaysWeather","import React, { useEffect, useState } from \"react\"\r\nimport ShowDaysWeather from \"../ShowDaysWeather/ShowDaysWeather\"\r\nimport \"./DaysWeatherForecastStyle.scss\"\r\n\r\nconst DaysWeatherForecast = (props) => {\r\n\r\n    const { daysWeather, handleWeatherIcon } = props\r\n    const [daysWeatherData, setDaysWeatherData] = useState([])\r\n    var hourly = []\r\n    var temp = [\r\n        {\r\n            dayName: \"\",\r\n            max_temp: 0,\r\n            min_temp: 0,\r\n            icon: \"\",\r\n            humidity: 0\r\n        },\r\n        {\r\n            dayName: \"\",\r\n            max_temp: 0,\r\n            min_temp: 0,\r\n            icon: \"\",\r\n            humidity: 0\r\n        },\r\n        {\r\n            dayName: \"\",\r\n            max_temp: 0,\r\n            min_temp: 0,\r\n            icon: \"\",\r\n            humidity: 0\r\n        },\r\n        {\r\n            dayName: \"\",\r\n            max_temp: 0,\r\n            min_temp: 0,\r\n            icon: \"\",\r\n            humidity: 0\r\n        },\r\n        {\r\n            dayName: \"\",\r\n            max_temp: 0,\r\n            min_temp: 0,\r\n            icon: \"\",\r\n            humidity: 0\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        prepareDays()\r\n    }, [daysWeather])\r\n\r\n    //create list of days \r\n    const prepareDays = () => {\r\n        try {\r\n            var date = parseInt(daysWeather.data.list[0].dt_txt.slice(8, 10)) + 1\r\n            for (var j = 0; j < 5; j++) {\r\n                for (var i = 0; i < 40; i++) {\r\n                    if (date == parseInt(daysWeather.data.list[i].dt_txt.slice(8, 10))) {\r\n                        hourly.push(daysWeather.data.list[i])\r\n                    }\r\n                }\r\n                prepareTemp(j)\r\n                date++\r\n                hourly = []\r\n            }\r\n            if(temp[4].humidity == 0)\r\n                temp.pop()\r\n            setDaysWeatherData(temp)\r\n            startAnimation()\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n\r\n    //find min temp and max temp and icon and \r\n    const prepareTemp = (j) => {\r\n        try {\r\n            var min = hourly[0].main.temp_min\r\n            var max = hourly[0].main.temp_min, icon = \"\"\r\n            var humidity = 0\r\n            for (var i = 0; i < hourly.length; i++) {\r\n                if (min > hourly[i].main.temp_min)\r\n                    min = hourly[i].main.temp_min\r\n                if (max < hourly[i].main.temp_max)\r\n                    max = hourly[i].main.temp_max\r\n                if (humidity < hourly[i].main.humidity) {\r\n                    humidity = hourly[i].main.humidity\r\n                    icon = hourly[i].weather[0].icon\r\n                }\r\n            }\r\n            temp[j].min_temp = min\r\n            temp[j].max_temp = max\r\n            temp[j].icon = icon\r\n            temp[j].humidity = humidity\r\n            dayName(hourly[0].dt_txt.slice(0, 10), j)\r\n            min = hourly[0].main.temp_min\r\n            max = hourly[0].main.temp_min\r\n            icon = \"\"\r\n            humidity = 0\r\n        }\r\n        catch(error){\r\n        }\r\n    }\r\n\r\n    //find day name\r\n    const dayName = (date, j) => {\r\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        var d = new Date(date);\r\n        var dayName = days[d.getDay()];\r\n        temp[j].dayName = dayName\r\n    }\r\n\r\n    const startAnimation = () => {\r\n        document.getElementById(\"days-weather-forecast\").className = \"days-weather-forecast days-weather-animation-left\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"days-weather-forecast\" id = \"days-weather-forecast\">\r\n            {daysWeatherData.map(item => <ShowDaysWeather temp={item} handleWeatherIcon={handleWeatherIcon} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DaysWeatherForecast","import React, { Component } from 'react'\r\nimport HourlyTemp from '../HourlyCurrentDay/HourlyTemp/HourlyTemp'\r\nimport {\r\n  WiDayThunderstorm, WiDaySunny, WiNightClear, WiCloud, WiCloudy, WiRain,\r\n  WiNightThunderstorm, WiLightning\r\n} from \"react-icons/wi\"\r\nimport { IoIosSnow } from \"react-icons/io\"\r\nimport { RiMistFill } from \"react-icons/ri\"\r\nimport { getCurrentTime, getCurrentWeather, getDaysWeather } from \"../../services/api/Server\"\r\nimport \"./WeatherStyle.scss\"\r\nimport DaysWeatherForecast from '../DaysWeather/DaysWeatherForecast/DaysWeatherForecast'\r\n\r\n\r\nexport default class Weather extends Component {\r\n\r\n  state = {\r\n    cityName: \"\",\r\n    temp: \"\",\r\n    icon: \"\",\r\n    minTemp: \"\",\r\n    maxTemp: \"\",\r\n    time: \"\",\r\n    main: \"\",\r\n    humidity: \"\",\r\n    description: \"\",\r\n    error: \"\",\r\n    data_CityName: \"\",\r\n  }\r\n\r\n  currentWeather = {}\r\n  daysWeather = {}\r\n  currentTime = {}\r\n\r\n  //get weather data and time from server \"https://openweathermap.org/\" and \"https://ipgeolocation.io/timezone-api.html\"\r\n  getData = async () => {\r\n    var { cityName } = this.state\r\n    this.currentWeather = await getCurrentWeather(cityName)\r\n    if (this.currentWeather !== \"Not Found\") {\r\n      this.setState({ error: false })\r\n      this.daysWeather = await getDaysWeather(cityName)\r\n      this.currentTime = await getCurrentTime(cityName)\r\n      this.matchState()\r\n      this.changeBackground()\r\n      this.startAnimation()\r\n    }\r\n    else\r\n      this.setState({ error: true })\r\n  }\r\n\r\n  kelvinToCelsius = (temperature) => {\r\n    return Math.floor(temperature - 273.15)\r\n  }\r\n\r\n  //match state with data that come from server\r\n  matchState = () => {\r\n    this.setState({\r\n      temp: this.kelvinToCelsius(this.currentWeather.data.main.temp),\r\n      icon: this.currentWeather.data.weather[0].icon,\r\n      minTemp: this.kelvinToCelsius(this.currentWeather.data.main.temp_min),\r\n      maxTemp: this.kelvinToCelsius(this.currentWeather.data.main.temp_max),\r\n      time: this.currentTime.data.time_24,\r\n      main: this.currentWeather.data.weather[0].main,\r\n      humidity: this.currentWeather.data.main.humidity,\r\n      description: this.currentWeather.data.weather[0].description,\r\n      data_CityName: this.currentWeather.data.name\r\n    })\r\n  }\r\n\r\n  handleWeatherIcon = (code, className) => {\r\n    if (code === \"01d\")\r\n      return <WiDaySunny className={className} />\r\n    else if (code === \"01n\")\r\n      return <WiNightClear className={className} />\r\n    else if (code === \"02d\" || code === \"02n\" || code === \"03d\" || code === \"03n\")\r\n      return <WiCloud className={className} />\r\n    else if (code === \"04d\" || code === \"04n\")\r\n      return <WiCloudy className={className} />\r\n    else if (code === \"09d\" || code === \"09n\" || code === \"10d\" || code === \"10n\")\r\n      return <WiRain className={className} />\r\n    else if (code === \"11d\" || code === \"11n\")\r\n      return <WiLightning className={className} />\r\n    else if (code === \"13d\" || code === \"13n\")\r\n      return <IoIosSnow className={className} />\r\n    else if (code === \"50d\" || code === \"50n\")\r\n      return <RiMistFill className={className} />\r\n  }\r\n\r\n\r\n  changeBackground = () => {\r\n    var string = this.state.icon.slice(2)\r\n    document.getElementById(\"hourly-days-weather\").style.display = \"flex\"\r\n    if (string == \"n\") {\r\n      document.getElementById(\"body\").className = \"body night\"\r\n      document.getElementById(\"hourly-days-weather\").className = \"hourly-days-weather night\"\r\n    }\r\n    else if (string == \"d\") {\r\n      document.getElementById(\"body\").className = \"body day\"\r\n      document.getElementById(\"hourly-days-weather\").className = \"hourly-days-weather day\"\r\n    }\r\n  }\r\n\r\n  //start animation when data load\r\n  startAnimation = () => {\r\n    document.getElementById(\"current-temp\").className = \"current-temp animationRight\"\r\n    document.getElementById(\"degree\").style.display = \"inline\"\r\n    document.getElementById(\"current-information\").className = \"current-information animationLeft\"\r\n    document.getElementById(\"min-max-temp\").style.display = \"flex\"\r\n    document.getElementById(\"main\").style.display = \"flex\"\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body default\" id=\"body\">\r\n        {/* header */}\r\n        <header className=\"header\">\r\n          <div className=\"header-input\">\r\n            <input\r\n              className=\"input\"\r\n              placeholder=\"enter city name:\"\r\n              onChange={(text) => { this.setState({ cityName: text.target.value }) }}\r\n            />\r\n            {(this.state.error !== true) ? null : (<p>Invalid city name</p>)}\r\n            <button className=\"search-btn\" onClick={() => { this.getData() }}>Search</button>\r\n          </div>\r\n          {(this.state.error !== true) ? null : (<p>Invalid city name</p>)}\r\n        </header>\r\n        {/* current weather */}\r\n        <div className=\"current-weather\">\r\n          <div className=\"current-temp\" id=\"current-temp\">\r\n            {this.handleWeatherIcon(this.state.icon, \"current-temp-icon\")}\r\n            <p className=\"temp\" id=\"degree\">{this.state.temp}&deg;</p>\r\n            <p className=\"status\">{this.state.description}</p>\r\n          </div>\r\n          <div className=\"current-information\" id=\"current-information\">\r\n            <div className=\"current-time\">\r\n              <p>{this.state.data_CityName}</p>\r\n              <p>{this.state.time}</p>\r\n            </div>\r\n            <div className=\"min-max-temp\" id=\"min-max-temp\">\r\n              <p>Min temperature : {this.state.minTemp}&deg;</p>\r\n              <p>Max temperature : {this.state.maxTemp}&deg;</p>\r\n            </div>\r\n            <div className=\"main\" id=\"main\">\r\n              <p>Main : {this.state.main}</p>\r\n              <p>Humidity : {this.state.humidity}%</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*hourly and  5 days weather */}\r\n        <div className=\"hourly-days-weather default\" id=\"hourly-days-weather\">\r\n          {/* hourly weather */}\r\n          <div className=\"hourly-weather\">\r\n            <HourlyTemp\r\n              daysWeather={this.daysWeather}\r\n              handleWeatherIcon={this.handleWeatherIcon}\r\n              currentTime={this.currentTime}\r\n            />\r\n          </div>\r\n          {/* days-weather */}\r\n          <div className=\"days-weather\">\r\n            <DaysWeatherForecast\r\n              handleWeatherIcon={this.handleWeatherIcon}\r\n              daysWeather={this.daysWeather} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import { TextField } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport Weather from './Components/Weather/Weather'\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Weather/>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}